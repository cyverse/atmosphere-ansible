---

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"

- name: Remove old vnc packages
  package:
    name: 
    - tightvncserver
    - tigervnc-server
    state: absent

- name: create needed directories
  file:
    path: '{{ item.PATH }}'
    state: '{{ item.STATE }}'
    mode: '{{ item.MODE }}'
    owner: '{{ item.OWNER }}'
  with_items: '{{ REQUIRED.dirs_to_make }}'

- name: install the dependencies for vncserver
  package:
    name: '{{ XGUI.vnc_dependencies }}'
    state: present

# EJS TBD REWRITE
- name: Install/remove extra package if Ubuntu 12
  apt:
    name: '{{ item.NAME }}'
    state: '{{ item.STATE }}'
  with_items:
    - { NAME: libthunar-vfs-1-2, STATE: present }
    - { NAME: novnc, STATE: absent }
  when: (ansible_distribution == "Ubuntu") and (ansible_distribution_major_version < '14')

- name: copy required files to remote host
  copy:
    src: '{{ item.FROM }}'
    dest: '{{ item.TO }}'
  with_items: '{{ XGUI.files_to_add }}'

- name: Copy custom xstartup for CentOS 7
  copy:
    src: xstartup.custom-cent7
    dest: /etc/vnc/xstartup.custom

- name: 'custom configuration templated out'
  template:
    src: 'config.custom.j2'
    dest: '/etc/vnc/config.custom'

- name: install the package for vncserver if CentOS
  yum:
    name:
    - 'xorg-x11-xauth'
    - '/tmp/{{ vncserver_pkg }}'
    state: present
    disable_gpg_check: '{{XGUI.disable_gpg_check}}'
  when: (ansible_distribution == "CentOS")

- name: install the package for vncserver if Ubuntu
  apt:
    deb: "/tmp/{{ vncserver_pkg }}"
    state: present
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Link RealVNC binary to vncserver binary
  file:
    src: "/usr/bin/vncserver-virtual"
    dest: "/usr/bin/vncserver"
    state: link

- name: remove locks and un-needed files
  file:
    path: '{{ item.PATH }}'
    state: absent
  with_items: '{{ REQUIRED.files_to_remove }}'
  ignore_errors: yes
  failed_when: False

- name: template xstartup for vncserver
  template:
    src: xstartup.j2
    dest: "/home/{{ ATMOUSERNAME }}/.vnc/xstartup"
    mode: 0755
    owner: '{{ ATMOUSERNAME }}'

# NOTE template xstartup for centos 7 and 8 - in jetstream ONLY and should be evaluated
- name: template xstartup for vncserver for centos 7
  template:
    src: xstartup-cent7.j2
    dest: "/home/{{ ATMOUSERNAME }}/.vnc/xstartup"
    mode: 0755
    owner: "{{ ATMOUSERNAME }}"
  when: (ansible_distribution == "CentOS") and (ansible_distribution_major_version|int >= 7)

- name: ensure correct X server permissions
  file:
    path: /etc/X11/xinit/xinitrc
    mode: 0755

- name: kill all running vncserver sessions
  command: 'pkill Xvnc-core'
  failed_when: False

- name: Run VNC commands (Add license, set password, start server)
  command: '{{ item }}'
  with_items: '{{ VNC_COMMANDS.realvnc }}'
  failed_when: False

- name: set environment variables for legacy systems
  set_fact:
    ansible_python_interpreter: /usr/bin/python26
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version < '6'
