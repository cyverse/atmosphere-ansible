---

- name: novnc - gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"

- name: novnc - remove conflicting packages
  package:
    name: "{{ item }}"
    state: absent
  with_items: "{{ XGUI.packages_to_remove }}"

- name: novnc - unarchive novnc code base for legacy ubuntu systems
  unarchive:
    src: novnc.tar
    dest: /opt
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version < "14") or (ansible_distribution == "CentOS" and ansible_distribution_major_version < "6")

- name: novnc - Install NoVNC
  package:
    name: novnc
    state: present
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= "14") or (ansible_distribution == "CentOS" and ansible_distribution_major_version >= "6")

- name: novnc - Start VNC Server
  shell: '{{ item }}'
  with_items: '{{ VNC_COMMANDS.novnc }}'
  ignore_errors: yes
  failed_when: False

- name: novnc - Start websocket for Ubuntu 12
  shell: >
    /opt/kanaka-noVNC-8b0a0f6/utils/launch.sh --listen {{ NOVNC.socket_port }} --vnc localhost:{{ NOVNC.vnc_port }} &
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version < "14")

- name: novnc - Start websocket for other OS
  shell: >
    websockify -D --web /usr/share/novnc/ {{ NOVNC.socket_port }} localhost:{{ NOVNC.vnc_port }} &
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version < "14") == false
