---
# tasks file for ntp

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"
  tags:
    - vars
    - install

- name: sync time with hardware clock
  shell: hwclock -s
  ignore_errors: yes
  failed_when: False
  tags:
    - time

- name: set local time manually from remote server as backup
  shell: >
    date -s "$(curl -s --head http://google.com | grep ^Date: | sed 's/Date: //g')"
  ignore_errors: yes
  failed_when: False
  tags:
    - time

- name: stop ntp service
  action: >
    service name={{ NTP_SERVICE }} state=stopped

- name: verify that ntp is installed
  stat: path=/etc/ntp.conf
  register: ntp_installed

- name: update system date manually
  shell: ntpdate 1.us.pool.ntp.org
  when: ntp_installed.stat.exists == False
  tags:
    - time

# Only run if on a hardware system. i.e. non-vm
#- name: update hardware clock manually
#  shell: hwclock --systohc
#  when: ntp_installed.stat.exists == False

- name: configure ntp
  template: src={{ item }} dest={{ NTP_CONFIG }}
  with_first_found:
    - "../templates/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.ntp.conf.j2"
    - "../templates/{{ ansible_distribution }}.ntp.conf.j2"
    - "../templates/{{ ansible_os_family }}.ntp.conf.j2"
  tags:
    - template
  when: SET_NTP_SERVERS == true

- name: 'Place CentOS ntp.sh (dhclient.d script) which removes pre-existing NTP servers from ntp.conf when setting DHCP-provided NTP servers'
  template:
    src: '{{ item }}'
    dest: '/etc/dhcp/dhclient.d/ntp.sh'
    owner: 'root'
    mode: 'u=rwx,g=rx,o=rx'
  with_first_found:
    - files:
        - '../templates/{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.ntp.sh.j2'
      skip: true
  when: 'ansible_distribution == "CentOS"'

- name: 'Renew DHCP lease for CentOS'
  command: "dhclient"
  when: 'ansible_distribution == "CentOS"'
  ignore_errors: yes

- name: start ntp service
  action: >
    service name={{ NTP_SERVICE }} state=restarted enabled=yes
