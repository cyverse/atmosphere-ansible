---

- name: 'Python interpreter set for centos-5'
  set_fact:
    ansible_python_interpreter: '/usr/bin/python'
  when: 'ansible_distribution == "CentOS" and ansible_distribution_major_version == "5"'
  tags: 'python'

- name: 'conflicting users and groups removed from sudoers'
  lineinfile:
    dest: '/etc/sudoers'
    backup: 'yes'
    regexp: '{{ item.value.reg }}'
    line: '{{ item.value.line }}'
    state: 'absent'
  with_dict: '{{ SUDOERS_USERS_AND_GROUPS.TO_REMOVE }}'
  tags: 'sudoers'

- name: 'all instances of atmosphere username removed from sudoers'
  lineinfile:
    dest: '/etc/sudoers'
    state: 'absent'
    regexp: '^{{ ATMOUSERNAME }}'
  failed_when: false

- name: 'users and groups added to sudoers'
  lineinfile:
    dest: '/etc/sudoers'
    backup: true
    regexp: '{{ item.value.reg }}'
    line: '{{ item.value.line }}'
    state: 'present'
  with_dict: "{{ SUDOERS_USERS_AND_GROUPS.TO_ADD }}"
  tags: 'sudoers'

- name: '/etc/skel/.bashrc populated'
  lineinfile:
    dest: '/etc/skel/.bashrc'
    line: '{{ item }}'
  with_items: '{{ SETUP_USER_BASHRC_LINES }}'

- name: 'atmousername and %users added to sudoers'
  lineinfile:
    dest: '/etc/sudoers'
    backup: 'yes'
    line: '{{ item }}'
  with_items:
    - '%users ALL=(ALL) NOPASSWD: ALL'
    - '{{ ATMOUSERNAME }} ALL=(ALL) NOPASSWD:ALL'
  # We want password-required sudo when we have an LDAP password to authenticate with
  when: 'SETUP_LDAP is not defined or SETUP_LDAP != true'

- name: see if user is already located in /etc/group
  command: grep "{{ ADD_TO_GROUP.GROUP }}:x:100:.*{{ ATMOUSERNAME }}.*" /etc/group
  register: user_not_present
  failed_when: False
  tags: debug-ssh
  when: ADD_TO_GROUP is defined

- name: add ADD_TO_GROUP.GROUP to /etc/group if not present
  lineinfile: dest=/etc/group regexp='^({{ ADD_TO_GROUP.GROUP }}:x:100:)(.*)' line="\1{{ item }},\2" state=present backrefs=yes
  with_items:
    - '{{ ADD_TO_GROUP.LIST_OF_USERS }}'
  when: 'user_not_present.rc == 1'
  tags: debug-ssh
  when: ADD_TO_GROUP is defined

- name: add ATMOUSERNAME to users group
  lineinfile: dest=/etc/group regexp='^(users:x:100:)(.*)' line="\1{{ ATMOUSERNAME }},\2" state=present backrefs=yes
  when:
    - 'ADD_TO_GROUP is not defined'
  tags: debug-ssh

- name: see if user is already located in docker group
  command: grep docker /etc/group
  register: docker_user_present
  failed_when: False

- name: add user to docker group in /etc/group if docker group exists
  lineinfile: dest=/etc/group regexp='^(docker:x:999:)(.*)' line="\1{{ ATMOUSERNAME }},\2" state=present backrefs=yes
  when: docker_user_present.rc == 0

- name: check if the home directory exists yet
  stat: path="/home/{{ ATMOUSERNAME }}"
  register: atmouser_home

- name: copy skel files into home directory
  shell: cp -R /etc/skel /home/"{{ ATMOUSERNAME }}"
  when: not atmouser_home.stat.exists

- block:
    - name: Set ownership for user's home, ignoring mounted volumes
      shell: >
        find /home/{{ ATMOUSERNAME }} -mount | xargs chown {{ ATMOUSERNAME }}:iplant-everyone
      failed_when: False

    - name: Set permissions for user's home, ignoring mounted volumes
      shell: >
        find /home/{{ ATMOUSERNAME }} -mount | xargs chmod 755 {{ ATMOUSERNAME }}:iplant-everyone
      failed_when: False
  tags: chown_users_home
