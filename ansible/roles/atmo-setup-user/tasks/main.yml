---

- name: set python for centos-5
  set_fact: ansible_python_interpreter=/usr/bin/python
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == '5'
  tags: python

- name: remove conflicting users and groups to sudoers
  lineinfile: dest=/etc/sudoers backup=yes regexp={{ item.value.reg }} line={{ item.value.line }} state=absent
  with_dict: "{{ SUDOERS_USERS_AND_GROUPS.TO_REMOVE }}"
  tags: sudoers

- name: remove all instances of atmosphere username in sudoers
  lineinfile: "dest=/etc/sudoers state=absent regexp='^{{ ATMOUSERNAME }}'"
  failed_when: false

#  This is how its done on cyvere's 
#
- name: add users and groups to sudoers
  lineinfile: dest=/etc/sudoers backup=yes regexp={{ item.value.reg }} line={{ item.value.line }} state=present
  with_dict: "{{ SUDOERS_USERS_AND_GROUPS.TO_ADD }}"
  tags: sudoers

- name: add atmousername and %users to sudoers
  lineinfile:
    dest=/etc/sudoers
    backup=yes
    line="{{ item }}"
  with_items: 
    - '%users ALL=(ALL) NOPASSWD: ALL'
    - '{{ ATMOUSERNAME }} ALL=(ALL) NOPASSWD:ALL'

  # tasks file for exit-code
- name: see if user is already located in /etc/group
  command: grep "users:x:100:.*{{ ATMOUSERNAME }}.*" /etc/group
  register: user_not_present
  failed_when: False
  tags: debug-ssh

- name: add user to /etc/group if user does not exist
  lineinfile: dest=/etc/group regexp='^(users:x:100:)(.*)' line="\1{{ ATMOUSERNAME }},\2" state=present backrefs=yes
  when: user_not_present.rc == 1
  tags: debug-ssh

# add user to docker group
- name: see if user is already located in /etc/group
  command: grep docker /etc/group
  register: docker_user_present
  failed_when: False

- name: add user to docker group in /etc/group if docker group exist
  lineinfile: dest=/etc/group regexp='^(docker:x:999:)(.*)' line="\1{{ ATMOUSERNAME }},\2" state=present backrefs=yes
  when: docker_user_present.rc == 0

- name: check if the home directory exists yet
  stat: path="/home/{{ ATMOUSERNAME }}"
  register: atmouser_home

- name: copy skel files into home directory
  shell: cp -R /etc/skel /home/"{{ ATMOUSERNAME }}"
  when: not atmouser_home.stat.exists

# This chown will cause errors if /home/ATMOUSERNAME/.gvfs is mounted.  We should add code to manually unmount it if
# it exists, then chown that user's home. -mgd
- name: set ownership for user's home
  file: path="/home/{{ ATMOUSERNAME }}" owner="{{ ATMOUSERNAME }}" group=iplant-everyone mode=0755 recurse=yes
  failed_when: False
  tags: chown_users_home
