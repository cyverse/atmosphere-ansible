---

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"
  tags: vars

###########
# Install #
###########
- name: for ubuntu, add the ansible official repo before installing packages
  apt_repository:
    repo: 'ppa:ansible/ansible'
    state: present
  when: ansible_distribution == "Ubuntu"

- name: install dependencies
  package:
    name: '{{ item }}'
    state: 'present'
  with_items: '{{ PACKAGES }}'
  tags: install

############
# Timezone #
############
- name: Remove old timezone link
  file: dest=/etc/localtime state=absent
  tags:
    - timezone

- name: template new timezone file
  template: src=etc_timezone.j2 dest=/etc/timezone
  tags:
    - timezone

- name: Update timezone
  file: src={{ ZONEINFO }} dest=/etc/localtime owner=root group=root state=link
  tags:
    - timezone

- name: Restart rsyslog so that logs are written with correct timezone
  service:
    name: '{{ SYSLOG_SERVICE_NAME }}'
    state: restarted

########
# MOTD #
########
- name: 'install motd file'
  copy:
    content: '{{ MOTD }}'
    dest: '/etc/motd'

- name: remove motd help text file, if present
  file: path=/etc/update-motd.d/10-help-text state=absent
  when: ansible_distribution == "Ubuntu"

##########
# CentOS #
##########
- name: disable SELinux for CentOS versions greater than 5
  selinux: state=disabled
  when: (ansible_distribution == "CentOS") and (ansible_distribution_major_version > '5')
  tags: selinux

- name: disable SELinux for CentOS 5
  selinux: state=disabled conf=/etc/selinux/semanage.conf
  when: (ansible_distribution == "CentOS") and (ansible_distribution_major_version == '5')
  tags: selinux

- name: download get-pip.py
  shell: wget https://bootstrap.pypa.io/get-pip.py -O /tmp/get-pip.py --no-check-certificate
  when: (ansible_distribution == "CentOS") and (ansible_distribution_major_version == '5')

- name: install/upgrade pip
  shell: /usr/bin/python26 get-pip.py chdir=/tmp/
  when: (ansible_distribution == "CentOS") and (ansible_distribution_major_version == '5')

##########
# Ubuntu #
##########
- name: check ubuntu legal notice
  stat: path=/etc/legal
  register: ubuntu_legal
  when: ansible_distribution == "Ubuntu"
  tags:
    - legal

- name: move ubuntu legal file if it exists
  command: mv /etc/legal /etc/legal.disabled
  when: (ansible_distribution == "Ubuntu") and (ubuntu_legal.stat.exists is defined) and (ubuntu_legal.stat.exists)
  tags:
    - legal

###########
# EZ      #
###########

- name: remove any existing ez directories
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/ansible/roles/ez
    - /root/.ansible/roles/ez
    - /opt/cyverse-ez

- name: create the /etc/cyverse directory if EZ_INSTALL_DIR is defined
  file:
    path: /etc/cyverse
    state: directory
    mode: 0755
  when: EZ_INSTALL_DIR is defined

- name: copy over template if EZ_INSTALL_DIR is defined
  template:
    src: ez.yml.j2
    dest: /etc/cyverse/ez.yml
    mode: 0755
  when: EZ_INSTALL_DIR is defined

# This line is needed because ansible-pull broke as of 2.4.0.
# Once ansible-pull is fixed to actually pull, we can remove this task
# See https://github.com/ansible/ansible/issues/30636
# normally, dependency on a remote resource should be limited, but in this
#   situation. we'll allow it due to the benefit. Any failure is ignore,
#   limiting the risk of affecting deploys.
- name: checkout the top level git repo for ez
  git:
    repo: "https://github.com/cyverse/cyverse-ez.git"
    dest: "/opt/cyverse-ez"
    force: yes
  ignore_errors: yes

# ansible-pull ez facility install without EZ_INSTALL_DIR; ignore errors
- name: ansible-pull the ez facility
  shell: ansible-pull -v -U https://github.com/cyverse/cyverse-ez.git -d /opt/cyverse-ez -i localhost -f >> /var/log/cyverse-ez.log 2>&1
  ignore_errors: yes

###########
# General #
###########
- name: remove references to rc.local.atmo in rc.local
  lineinfile: dest=/etc/rc.d/rc.local state=absent line="\n# this is for atmosphere\nif [ -x /etc/rc.d/rc.local.atmo ]; then\n\t/etc/rc.d/rc.local.atmo\nfi"
  when: ansible_distribution == "CentOS"
  failed_when: False

- name: remove rc.local.atmo file
  file: path={{ RC_LOCAL_ATMO }} state=absent
  failed_when: False

- name: load modules
  modprobe: name={{ item }} state=present
  with_items: MODULES_TO_LOAD
  when: MODULES_TO_LOAD is defined
  failed_when: False

- name: make sure ssh directory exists
  file: path=/root/.ssh/ state=directory mode="0700"

- name: Check for file /etc/aliases
  stat: path=/etc/aliases
  register: aliases
  tags: email

- name: disable mail_always to prevent Ansible from spamming security
  lineinfile: dest='{{ item.dest }}' regexp='{{ item.regexp }}' line='{{ item.line }}'
  with_items:
    - { dest: '/etc/sudoers', regexp: 'Defaults mail_always', line: '#Defaults mail_always' }
  tags: email

- name: disable support mailer in aliases to prevent Ansible from spamming security
  lineinfile: dest='{{ item.dest }}' regexp='{{ item.regexp }}' line='{{ item.line }}'
  with_items:
    - { dest: '/etc/aliases', regexp: '^(.*)support:(.*)', line: '#support:        postmaster' }
  when: aliases.stat.exists
  tags: email
