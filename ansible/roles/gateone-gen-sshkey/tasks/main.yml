---

# this role expects the following variables:
# 	ATMOUSERNAME - the username
#       GATEONE_LOCAL_PUBKEY_DIR - (optional) the directory to transfer the public key; otherwise, /tmp is used
#	IMPORTANT_NOTE: the directory must end in a '/'
#       GATEONE_KEY_NAME - (optional) unix file-compatible key name; otherwise, "username_default" is used
# Assumption #1: gateone is installed as root and requires root privileges
# Assumption #2: keys generated will automatically be added as a default key
# TODO: change this role configure away from root and default locations

- name: ensure the existence of the user directory
  file:
    path: "{{ KEY_LOC.path }}"
    owner: "{{ KEY_LOC.owner }}"
    group: "{{ KEY_LOC.group }}"
    mode: 0700
    state: directory
  delegate_to: "{{ play_on }}"

- name: check the existence of a given ssh key by name
  stat:
    path: "{{ KEY_LOC }}/{{ ATMOUSERNAME }}_default"
  register: go_key
  delegate_to: "{{ play_on }}"

- name: generate the public key
  command: >
    /usr/bin/ssh-keygen -N '' -t rsa -b 2048 -f {{ KEY_LOC }}/{{ ATMOUSERNAME }}_default -C {{ ATMOUSERNAME }}
  when: go_key.stat.exists == False
  delegate_to: "{{ play_on }}"

- name: set the permissions on the private key file
  file:
    path: "{{ KEY_LOC }}/{{ ATMOUSERNAME }}_default"
    mode: 0600
  delegate_to: "{{ play_on }}"

- name: add the key name to .default_ids
  lineinfile:
    dest: "{{ KEY_LOC }}/.default_ids"
    line: "{{ ATMOUSERNAME }}_default"
    create: yes
    state: present
  delegate_to: "{{ play_on }}"

- name: finally, transfer the public key locally
  fetch:
    src: "{{ KEY_LOC }}/{{ ATMOUSERNAME }}_default.pub"
    dest: "{{ GATEONE_LOCAL_PUBKEY_DIR | default('/tmp/') }}"
    flat: yes
  delegate_to: "{{ play_on }}"

- name: grab local copy of user ssh private key
  set_fact:
    pk_file: "{{ lookup('file', '/tmp/' + ATMOUSERNAME + '_default.pub') }}"
  tags: debug

- name: distribute the generated gate one key to the instance
  authorized_key:
    key: "{{ pk_file }}"
    state: present
    user: "{{ item }}"
  when: pk_file is defined
  with_items:
    - "{{ ATMOUSERNAME }}"
  tags:
    - ssh-keys
    - debug

- name: remove user key from controller node
  local_action: file path=/tmp/{{ ATMOUSERNAME }}_default.pub state=absent
  tags:
    - ssh-keys
    - delete-key
