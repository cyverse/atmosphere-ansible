---

- name: Fail if ATMOUSERNAME or USERSSHKEYS is undefined
  fail:
    msg: "ATMOUSERNAME or USERSSHKEYS is undefined but required for this role."
  when: ATMOUSERNAME is not defined or USERSSHKEYS is not defined

- name: 'Remove user account'
  user:
    name: '{{ ATMOUSERNAME }}'
    state: 'absent'
    shell: '/bin/bash'
    remove: 'yes'

- name: 'Remove user home directory'
  file:
    path: '/home/{{ ATMOUSERNAME }}'
    state: 'absent'

- name: 'Remove users ssh keys from root authorized_keys'
  authorized_key:
    user: root
    state: absent
    key: "{{ item }}"
  with_items: '{{ USERSSHKEYS }}'
  become: yes
  when: USERSSHKEYS is defined

# From atmosphere-ansible role atmo-setup-user
- name: 'conflicting users and groups removed from sudoers'
  lineinfile:
    dest: '/etc/sudoers'
    backup: 'yes'
    regexp: '{{ item.value.reg }}'
    line: '{{ item.value.line }}'
    state: 'absent'
  with_dict: '{{ SUDOERS_USERS_AND_GROUPS.TO_REMOVE }}'
  tags: 'sudoers'

- name: 'all instances of atmosphere username removed from sudoers'
  lineinfile:
    dest: '/etc/sudoers'
    state: 'absent'
    regexp: '^{{ ATMOUSERNAME }}'
  failed_when: false

- name: '/etc/skel/.bashrc un-populated'
  lineinfile:
    dest: '/etc/skel/.bashrc'
    line: '{{ item }}'
    state: 'absent'
  with_items: '{{ SETUP_USER_BASHRC_LINES }}'

- name: see if user is already located in /etc/group
  command: grep "{{ ADD_TO_GROUP.GROUP }}:x:100:.*{{ ATMOUSERNAME }}.*" /etc/group
  register: user_not_present
  failed_when: False
  tags: debug-ssh
  when: ADD_TO_GROUP is defined

- name: Remove ADD_TO_GROUP.GROUP to /etc/group if present
  lineinfile:
    dest: "/etc/group"
    regexp: '^({{ ADD_TO_GROUP.GROUP }}:x:100:)(.*)'
    line: '\1{{ item }},\2'
    state: absent
    backrefs: yes
  with_items:
    - '{{ ADD_TO_GROUP.LIST_OF_USERS }}'
  tags: debug-ssh
  when: ADD_TO_GROUP is defined and 'user_not_present.rc != 1'

- name: Remove ATMOUSERNAME to users group
  lineinfile:
    dest: "/etc/group"
    regexp: '^(users:x:100:)(.*)'
    line: '\1{{ ATMOUSERNAME }},\2'
    state: absent
    backrefs: yes
  when:
    - 'ADD_TO_GROUP is not defined'
  tags: debug-ssh

- name: see if user is already located in docker group
  command: grep docker /etc/group
  register: docker_user_present
  failed_when: False

- name: Remove user from docker group in /etc/group if docker group doesnt exist
  lineinfile:
    dest: "/etc/group"
    regexp: '^(docker:x:999:)(.*)'
    line: '\1{{ ATMOUSERNAME }},\2'
    state: absent
    backrefs: yes
  when: docker_user_present.rc != 0
